using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.ComponentModel;

namespace easytodo.Model
{
    /// <summary>
    /// Represents a Task item.
    /// </summary>
    class TaskModel : IDataErrorInfo
    {

        #region Fields

        public int ID { get; set; }
        public string Name { get; set; }
        public string Content { get; set; }
        public string Category { get; set; }
        public int Pomodoros { get; set; }
        /// TODO: Implement creation date and due date.
        public bool IsBookmark { get; set; }
        public Priority TaskPriority { get; set; }

        #endregion // Fields

        #regions Autogenerated Members
        #endregion // Autogenerated Members

        #region Autogenerated Properties
        #endregion // Autogenerated Properties

        #region Methods

        public static TaskModel Copy(TaskModel from)
        {
            var to = new TaskModel();
            to.ID = from.ID;
            to.Name = from.Name;
            to.Content = from.Content;
            to.Category = from.Category;
            to.Pomodoros = from.Pomodoros;
            to.IsBookmark = from.IsBookmark;
            to.TaskPriority = from.TaskPriority;

            return to;
        }

        public static TaskModel Copy(TaskModelWrapper from)
        {
            var to = new TaskModel();
            to.ID = from.ID;
            to.Name = from.Name;
            to.Content = from.Content;
            to.Category = from.Category;
            to.Pomodoros = from.Pomodoros;
            to.IsBookmark = from.IsBookmark;
            to.TaskPriority = from.TaskPriority;

            return to;
        }

        #endregion // Methods

        #region Interface Implementations

        string IDataErrorInfo.Error
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        string IDataErrorInfo.this[string columnName]
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        #endregion // Interface Implementations

        #region Constants and Enums

        public enum Priority { Low, Normal, High };

        #endregion


    }
}
